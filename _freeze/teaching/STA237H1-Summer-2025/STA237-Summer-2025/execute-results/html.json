{
  "hash": "c345610dbdec51fae1fb98185e244dd9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"STA237-Summer-2025\"\n---\n\n\n\nThis page contains tutorial notes for [STA237H1](https://artsci.calendar.utoronto.ca/course/sta237h1) Summer 2025 under the instruction of [Dr. Gracia Yunruo Dong](https://graciadong.github.io/).\n\n# Week 1\n\n::: {.callout-question collapse=\"true\"}\n### Question 1\n\nb)  Suppose $\\Omega = \\{1, 2, 3, 4, 5, 6\\}$ and let $A = \\{1, 2, 4, 5\\}$, $B = \\{1, 3, 5\\}$ and $C = \\{2, 4, 6\\}$. Use this example to verify the two results in the distributive law.\n:::\n\n::: {.callout-tip collapse=\"true\"}\n### Solution\n\nWe need to verify two things. \\newline i. $A \\cap (B \\cup C) = (A \\cap B) \\cup (A \\cap C)$\n\n\\begin{align*}\nB \\cup C &=  \\{1, 2, 3, 4, 5, 6\\} \\\\\nA \\cap (B \\cup C) &=  \\{1, 2, 4, 5\\} \\\\\nA \\cap B &=  \\{1, 5\\} \\\\\nA \\cap C &=  \\{2, 4\\} \\\\\n(A \\cap B) \\cup (A \\cap C) &=  \\{1, 2, 4, 5\\}\n\\end{align*}\n\nTherefore, $A \\cap (B \\cup C) = (A \\cap B) \\cup (A \\cap C)$ as required.\n\n\\bigskip\n\nii. $A \\cup (B \\cap C) = (A \\cup B) \\cap (A \\cup C)$\n\n\\begin{align*}\nB \\cap C &= \\{1, 3, 5\\} \\cap \\{2, 4, 6\\} = \\emptyset \\\\\nA \\cup (B \\cap C) &=  \\{1, 2, 4, 5\\} \\\\\nA \\cup B &=  \\{1, 2, 3, 4, 5\\} \\\\\nA \\cup C &=  \\{1, 2, 4, 5, 6\\} \\\\\n(A \\cup B) \\cap (A \\cup C) &= \\{1, 2, 4, 5\\}\n\\end{align*}\n\nTherefore, $A \\cup (B \\cap C) = (A \\cup B) \\cap (A \\cup C)$ as required.\n:::\n\n::: {.callout-question collapsed=\"true\"}\n### Question 2\n\nIn R, write R code to simulate rolling a fair six-sided die once, 10 times, 100 times, and 1000 times.\n\na)  Estimate the probability of rolling a 3 or higher based on 1000 simulated dice rolls.\nb)  If you were to repeat your simulation, would you end up with the same estimate? Why or why not.\n:::\n\n::: {.callout-tip collapse=\"true\"}\n### Solution\n\nWe first simulate the rolling of a fair six-sided die 10, 100, and 1000 times.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2025) # set seed for reproducibility\nsample(1:6, 10, replace=TRUE)  # Rolling a fair six-sided die 10 times\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 5 4 4 2 1 6 3 2 5 1\n```\n\n\n:::\n\n```{.r .cell-code}\nsample(1:6, 100, replace=TRUE) # 100 times\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] 4 4 3 3 5 3 3 6 5 5 1 4 1 6 3 6 4 3 2 3 5 3 5 4 2 2 1 3 2 2 1 3 3 1 6 4 4\n [38] 2 5 3 3 1 3 6 2 1 1 1 6 2 4 1 5 2 5 5 6 3 1 6 4 4 6 5 3 4 2 2 2 5 2 1 1 5\n [75] 4 6 3 6 4 4 1 4 5 4 4 6 2 5 1 6 4 5 4 6 2 4 4 6 3 5\n```\n\n\n:::\n\n```{.r .cell-code}\nsample(1:6, 1000, replace=TRUE) # 1000 times\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   [1] 2 1 2 6 3 2 4 6 5 1 2 6 2 2 1 2 1 6 4 4 1 6 3 6 2 3 2 4 1 1 6 1 1 2 6 5 2\n  [38] 3 5 4 5 4 6 4 4 4 5 2 4 6 4 6 5 3 4 5 4 1 3 3 2 4 4 6 4 3 3 2 6 1 1 2 4 6\n  [75] 4 4 2 6 6 4 3 3 2 3 6 3 6 1 6 1 3 2 4 1 6 5 3 6 2 2 5 6 4 4 3 4 1 3 3 2 4\n [112] 3 4 5 5 4 5 2 1 3 1 5 2 3 5 6 5 4 1 4 5 4 3 2 6 1 2 5 6 2 5 3 1 6 4 3 2 5\n [149] 4 5 2 4 4 2 6 2 6 4 2 2 3 1 6 3 1 3 3 6 4 1 6 2 1 3 6 3 4 1 3 3 6 1 5 6 1\n [186] 1 2 2 1 1 2 1 6 4 6 2 4 4 3 1 1 3 5 1 5 2 3 3 6 5 4 2 6 5 5 6 3 1 3 1 1 3\n [223] 1 5 4 5 6 2 1 3 1 6 3 3 3 6 2 4 5 5 3 4 1 3 6 1 1 1 4 4 5 1 4 2 5 4 6 3 4\n [260] 3 4 4 4 1 6 3 4 6 5 1 5 4 4 3 5 3 6 1 6 6 5 3 1 5 3 2 1 2 2 6 1 3 5 1 3 6\n [297] 1 5 4 5 5 2 4 6 4 1 3 1 6 2 3 1 4 4 5 6 5 1 4 2 1 1 4 4 3 3 1 2 1 4 6 4 3\n [334] 5 4 2 2 5 3 5 3 6 5 3 6 3 3 2 3 6 1 4 4 1 3 6 6 5 6 5 3 2 2 3 4 2 3 6 5 1\n [371] 2 3 2 2 5 4 6 4 3 1 2 2 5 2 4 6 6 4 6 1 2 4 1 2 1 4 6 3 3 2 3 6 1 1 3 3 3\n [408] 2 4 3 1 6 1 1 2 4 3 1 2 4 4 5 3 3 2 5 1 5 6 4 4 6 5 1 1 6 6 1 3 6 1 5 5 4\n [445] 2 6 5 6 1 2 6 5 1 6 2 2 6 1 5 3 5 4 6 2 1 4 6 2 6 5 3 4 6 6 4 4 3 4 6 6 2\n [482] 3 6 1 1 1 4 2 4 3 2 2 4 2 2 6 2 3 6 5 6 4 4 6 6 3 5 6 3 5 4 6 2 4 4 6 1 4\n [519] 3 5 1 1 6 4 1 5 1 4 5 2 2 6 2 2 4 4 1 5 4 1 4 1 5 3 4 6 2 1 5 1 5 3 4 6 1\n [556] 6 4 2 1 4 3 4 1 3 6 1 3 2 6 2 3 1 1 5 6 6 1 1 2 4 5 5 2 2 5 4 6 1 6 5 6 5\n [593] 4 4 4 5 6 1 3 1 5 5 3 4 1 3 2 4 2 5 4 6 5 6 6 1 3 3 4 3 6 6 6 3 1 2 2 6 2\n [630] 3 1 4 6 1 2 4 3 5 1 4 3 6 5 4 5 3 3 6 6 1 6 3 1 3 1 4 1 5 6 5 4 4 4 6 5 6\n [667] 4 3 2 2 3 6 1 1 6 5 3 3 3 2 5 5 5 1 4 4 4 4 6 2 5 1 4 1 5 6 4 3 6 3 1 4 3\n [704] 4 1 3 6 3 6 6 2 6 4 2 5 4 1 4 3 4 3 1 2 3 3 6 5 3 6 2 1 4 1 3 3 6 1 3 4 3\n [741] 6 5 5 6 6 2 4 2 6 3 1 1 3 1 2 2 4 5 4 5 3 1 6 1 6 1 5 2 2 1 3 4 2 6 5 4 3\n [778] 2 1 1 4 2 1 2 1 5 1 2 6 5 4 3 3 2 5 2 2 5 2 3 4 5 4 5 2 1 1 6 3 5 2 5 1 6\n [815] 1 3 6 1 3 4 2 3 4 5 1 1 2 3 1 1 2 2 1 5 1 2 6 1 1 1 6 2 2 5 4 1 3 5 2 2 2\n [852] 2 6 3 4 5 2 5 1 5 1 1 2 2 3 5 2 2 3 6 5 2 1 3 6 4 5 1 5 4 5 5 1 1 6 1 2 5\n [889] 5 3 2 1 3 6 2 1 2 1 6 2 2 5 3 6 4 3 2 2 6 6 2 2 2 3 2 1 1 1 6 6 2 2 6 6 6\n [926] 2 1 4 2 3 5 3 2 1 4 1 1 3 6 6 6 6 2 6 1 6 6 5 6 5 6 6 6 6 2 2 3 2 5 4 6 2\n [963] 2 3 6 4 5 1 5 3 5 6 1 5 4 3 4 3 5 6 6 2 4 5 5 4 5 6 6 6 4 3 6 2 4 2 1 4 4\n[1000] 2\n```\n\n\n:::\n:::\n\n\n\nThe probability of rolling a 3 or higher based on 1000 simulated dice rolls is\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2025) # set seed for reproducibility\nmean(sample(1:6,1000,replace=TRUE)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.449\n```\n\n\n:::\n:::\n\n\n\nIf we were to repeat this simulation (without setting seed) five times, we get\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(sample(1:6,1000,replace=TRUE)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.43\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(sample(1:6,1000,replace=TRUE)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.546\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(sample(1:6,1000,replace=TRUE)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.525\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(sample(1:6,1000,replace=TRUE)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.471\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(sample(1:6,1000,replace=TRUE)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.631\n```\n\n\n:::\n:::\n\n\n\nSo no, every time this is repeated, we will get different sequences of simulated rolls, and will therefore have different estimates for the probability of rolling 3+.\n\nHence, it is important to set a seed for reproducibility purposes so other people can confirm our results.\n:::\n\n::: {.callout-question collapsed=\"true\"}\n### Question 3\n\nConsider the word ‘STATISTICS’. Is the number of unique arrangements of the letters in ‘STATISTICS’ 10!? Justify your answer and compute the probability that a random rearrangement of the letters in ‘STATISTICS’ will spell the word ‘STATISTICS’.\n:::\n\n:::: {.callout-tip collapse=\"true\"}\n### Solution\n\nNo, because some letters are repeated. The word \"STATISTICS\" has 10 letters in total, but with repeated letters: S 3 times, T 3 times, I 2 times, and A, C appear once each.\n\nTo count the number of distinct permutations, we divide 10! by the factorials of the repeated letters: $\\dfrac{10!}{3! \\times 3! \\times 2!} = \\dfrac{3628800}{72} = 50400$.\n\n::: callout-note\n**Theorem: Permutations of a multiset**.\n\n*Let S be a set with n (not necessarily distinct objects), such that there are* $n_1$ objects of type 1, $n_2$ objects of type 2, $\\cdots$, $n_k$ objects of type k, where $n_1 + n_2 + ... + n_k = n$. Then the number of arrangements of these objects is $\\dfrac{n!}{n_1! \\times n_2! \\times \\cdots \\times n_k!}$\n:::\n\nSince there is only one unique arrangement of the word \"STATISTICS\", the probability is $\\boxed{\\dfrac{1}{50400}}$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumerator <- 1\ndenominator <- factorial(10) / (factorial(3)*factorial(3)*factorial(2))\n\n(prob <- numerator/denominator)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.984127e-05\n```\n\n\n:::\n:::\n\n\n::::\n\n::: {.callout-question collapsed=\"true\"}\n### Question 4\n\nAssume birthdays are equally likely to occur in each of the 12 months of the year. What is the probability that at least two people in a group of three students have birth months in common? Be sure to show your steps.\n:::\n\n::: {.callout-tip collapse=\"true\"}\n### Solution\n\nIt is easier to work with complements when you see the phrase \"at least\". So that we get $$\\begin{align*}\nP(\\text{at least one shared}) \n&= 1 - P(\\text{all different}) \\\\\n&= 1 - \\frac{12 \\times 11 \\times 10}{12^3} \\\\\n&= 1 - \\frac{11 \\times 10}{12^2} \\\\\n&= 1 - \\frac{110}{144} \\\\\n&= 1 - 0.7639 \\\\\n&= \\boxed{0.2361}\n\\end{align*}$$\n\n------------------------------------------------------------------------\n\nAlternatively, let \\begin{align*}\nA &= \\text{first student is assigned any birth month (no restriction)} \\\\\nB &= \\text{second student has a different birth month from the first} \\\\\nC &= \\text{third student has a different birth month from both the first and second}\n\\end{align*}\n\nThen, \\begin{align*}\nP(A \\cap B \\cap C) \n&= P(A) \\cdot P(B \\mid A) \\cdot P(C \\mid A \\cap B) \\\\\n&= 1 \\cdot \\frac{11}{12} \\cdot \\frac{10}{12} \\\\\n&= \\frac{110}{144} \\\\\n&\\approx 0.7639\n\\end{align*}\n\nSo the probability that at least two students share a birth month is: \\begin{align*}\nP(\\text{at least one shared}) \n&= 1 - P(\\text{all different}) \\\\\n&= 1 - 0.7639 \\\\\n&= \\boxed{0.2361}\n\\end{align*}\n:::\n",
    "supporting": [
      "STA237-Summer-2025_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}